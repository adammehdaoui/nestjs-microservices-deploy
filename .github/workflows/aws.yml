name: Deploy to Amazon ECS

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: "eu-west-3"
  ECR_REPOSITORY: "nestjs-microservices" # Utilisez le nom correct du référentiel ici
  ECS_SERVICE: "app-web"
  ECS_CLUSTER: "nestjs-microservices"
  ECS_TASK_DEFINITION: .github/.aws/task-definition.json

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push hello-world microservice image to Amazon ECR
        id: build-hello-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "docker push $ECR_REGISTRY/$ECR_REPOSITORY/hello-world-microservice:$IMAGE_TAG"
          docker build -t hello-world-microservice:$IMAGE_TAG ./apps/hello-world-microservice
          docker push $ECR_REGISTRY/$ECR_REPOSITORY/hello-world-microservice:$IMAGE_TAG
          echo "image_hello=$ECR_REGISTRY/$ECR_REPOSITORY/hello-world-microservice:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build, tag, and push api-gateway microservice image to Amazon ECR
        id: build-api-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "docker push $ECR_REGISTRY/$ECR_REPOSITORY/api-gateway:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/api-gateway:$IMAGE_TAG ./api-gateway
          docker push $ECR_REGISTRY/$ECR_REPOSITORY/api-gateway:$IMAGE_TAG
          echo "image_api=$ECR_REGISTRY/$ECR_REPOSITORY/api-gateway:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Fill in the new image IDs in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: hello-world-microservice
          image: ${{ steps.build-hello-image.outputs.image_hello }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
